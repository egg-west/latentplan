2024-03-14 03:36:25,672 INFO    MainThread:1184907 [wandb_setup.py:_flush():76] Configure stats pid to 1184907
2024-03-14 03:36:25,672 INFO    MainThread:1184907 [wandb_setup.py:_flush():76] Loading settings from /home/v-linjiexu/.config/wandb/settings
2024-03-14 03:36:25,672 INFO    MainThread:1184907 [wandb_setup.py:_flush():76] Loading settings from /home/v-linjiexu/latentplan/wandb/settings
2024-03-14 03:36:25,672 INFO    MainThread:1184907 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-03-14 03:36:25,672 INFO    MainThread:1184907 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'train.py', 'program': 'train.py'}
2024-03-14 03:36:25,672 INFO    MainThread:1184907 [wandb_init.py:_log_setup():461] Logging user logs to /home/v-linjiexu/latentplan/wandb/run-20240314_033625-29f430ke/logs/debug.log
2024-03-14 03:36:25,672 INFO    MainThread:1184907 [wandb_init.py:_log_setup():462] Logging internal logs to /home/v-linjiexu/latentplan/wandb/run-20240314_033625-29f430ke/logs/debug-internal.log
2024-03-14 03:36:25,672 INFO    MainThread:1184907 [wandb_init.py:init():495] calling init triggers
2024-03-14 03:36:25,673 INFO    MainThread:1184907 [wandb_init.py:init():498] wandb.init called with sweep_config: {}
config: {'_initialized': True, '_explicit_bool': False, '_underscores_to_dashes': False, '_parsed': True, 'extra_args': ['--exp_name', 'random_name', '--tag', 'development', '--seed', '2323'], 'argument_buffer': {'help': (('-h', '--help'), {'action': 'help', 'default': '==SUPPRESS==', 'help': 'show this help message and exit'})}, '_subparser_buffer': [], 'class_variables': {'dataset': {'comment': ''}, 'config': {'comment': ''}}, '_annotations': {'dataset': <class 'str'>, 'config': <class 'str'>}, 'description': None, 'argument_default': None, 'prefix_chars': '-', 'conflict_handler': 'error', '_registries': {'action': {None: <class 'argparse._StoreAction'>, 'store': <class 'argparse._StoreAction'>, 'store_const': <class 'argparse._StoreConstAction'>, 'store_true': <class 'argparse._StoreTrueAction'>, 'store_false': <class 'argparse._StoreFalseAction'>, 'append': <class 'argparse._AppendAction'>, 'append_const': <class 'argparse._AppendConstAction'>, 'count': <class 'argparse._CountAction'>, 'help': <class 'argparse._HelpAction'>, 'version': <class 'argparse._VersionAction'>, 'parsers': <class 'argparse._SubParsersAction'>, 'extend': <class 'argparse._ExtendAction'>}, 'type': {None: <function ArgumentParser.__init__.<locals>.identity at 0x7f8f83bb21f0>}}, '_actions': [_StoreAction(option_strings=['--dataset'], dest='dataset', nargs=None, const=None, default='halfcheetah-medium-expert-v2', type=<class 'str'>, choices=None, help='(str, default=halfcheetah-medium-expert-v2) ', metavar=None), _StoreAction(option_strings=['--config'], dest='config', nargs=None, const=None, default='config.vqvae', type=<class 'str'>, choices=None, help='(str, default=config.vqvae) ', metavar=None), _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, help='show this help message and exit', metavar=None)], '_option_string_actions': {'--dataset': _StoreAction(option_strings=['--dataset'], dest='dataset', nargs=None, const=None, default='halfcheetah-medium-expert-v2', type=<class 'str'>, choices=None, help='(str, default=halfcheetah-medium-expert-v2) ', metavar=None), '--config': _StoreAction(option_strings=['--config'], dest='config', nargs=None, const=None, default='config.vqvae', type=<class 'str'>, choices=None, help='(str, default=config.vqvae) ', metavar=None), '-h': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, help='show this help message and exit', metavar=None), '--help': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, help='show this help message and exit', metavar=None)}, '_action_groups': [<argparse._ArgumentGroup object at 0x7f8f5cd52430>, <argparse._ArgumentGroup object at 0x7f8f5cdf6df0>], '_mutually_exclusive_groups': [], '_defaults': {}, '_negative_number_matcher': re.compile('^-\\d+$|^-\\d*\\.\\d+$'), '_has_negative_number_optionals': [], 'prog': 'train.py', 'usage': None, 'epilog': None, 'formatter_class': <class 'argparse.HelpFormatter'>, 'fromfile_prefix_chars': None, 'add_help': True, 'allow_abbrev': True, '_positionals': <argparse._ArgumentGroup object at 0x7f8f5cd52430>, '_optionals': <argparse._ArgumentGroup object at 0x7f8f5cdf6df0>, '_subparsers': None, 'args_from_configs': [], 'dataset': 'halfcheetah-medium-expert-v2', 'config': 'config.vqvae', 'model': 'VQTransformer', 'tag': 'development', 'state_conditional': True, 'N': 100, 'discount': 0.99, 'n_layer': 4, 'n_head': 4, 'n_epochs_ref': 50, 'n_saves': 3, 'logbase': '/home/v-linjiexu/logs/', 'device': 'cuda', 'K': 512, 'latent_step': 3, 'n_embd': 128, 'trajectory_embd': 512, 'batch_size': 512, 'learning_rate': 0.0002, 'lr_decay': False, 'seed': '2323', 'embd_pdrop': 0.1, 'resid_pdrop': 0.1, 'attn_pdrop': 0.1, 'step': 1, 'subsampled_sequence_length': 25, 'termination_penalty': -100, 'exp_name': 'random_name', 'position_weight': 1, 'action_weight': 5, 'reward_weight': 1, 'value_weight': 1, 'first_action_weight': 0, 'sum_reward_weight': 0, 'last_value_weight': 0, 'suffix': '', 'normalize': True, 'normalize_reward': True, 'max_path_length': 1000, 'bottleneck': 'pooling', 'masking': 'uniform', 'disable_goal': False, 'residual': True, 'ma_update': True, 'commit': 'c096a5c6e37f78b918946cf8d26119a08d156c73 main', 'savepath': '/home/v-linjiexu/logs/halfcheetah-medium-expert-v2/random_name/', 'task_type': 'locomotion', 'obs_shape': [-1]}
2024-03-14 03:36:25,673 INFO    MainThread:1184907 [wandb_init.py:init():548] starting backend
2024-03-14 03:36:25,673 INFO    MainThread:1184907 [backend.py:_multiprocessing_setup():97] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-03-14 03:36:25,701 INFO    MainThread:1184907 [backend.py:ensure_launched():217] starting backend process...
2024-03-14 03:36:25,731 INFO    MainThread:1184907 [backend.py:ensure_launched():222] started backend process with pid: 1185067
2024-03-14 03:36:25,732 INFO    MainThread:1184907 [wandb_init.py:init():558] backend started and connected
2024-03-14 03:36:25,748 INFO    MainThread:1184907 [wandb_init.py:init():634] updated telemetry
2024-03-14 03:36:25,811 INFO    MainThread:1184907 [wandb_init.py:init():665] communicating run to backend with 30 second timeout
2024-03-14 03:36:26,420 INFO    MainThread:1184907 [wandb_run.py:_on_init():1919] communicating current version
2024-03-14 03:36:26,460 INFO    MainThread:1184907 [wandb_run.py:_on_init():1923] got version response upgrade_message: "wandb version 0.16.4 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-03-14 03:36:26,460 INFO    MainThread:1184907 [wandb_init.py:init():700] starting run threads in backend
2024-03-14 03:36:28,392 WARNING MainThread:1184907 [wandb_init.py:init():1064] interrupted
Traceback (most recent call last):
  File "/anaconda/envs/38/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 1043, in init
    run = wi.init()
  File "/anaconda/envs/38/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 711, in init
    _ = backend.interface.communicate_run_start(run_obj)
  File "/anaconda/envs/38/lib/python3.8/site-packages/wandb/sdk/interface/interface.py", line 234, in communicate_run_start
    result = self._communicate_run_start(run_start)
  File "/anaconda/envs/38/lib/python3.8/site-packages/wandb/sdk/interface/interface_shared.py", line 440, in _communicate_run_start
    result = self._communicate(rec)
  File "/anaconda/envs/38/lib/python3.8/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/anaconda/envs/38/lib/python3.8/site-packages/wandb/sdk/interface/router.py", line 37, in get
    is_set = self._object_ready.wait(timeout)
  File "/anaconda/envs/38/lib/python3.8/threading.py", line 558, in wait
    signaled = self._cond.wait(timeout)
  File "/anaconda/envs/38/lib/python3.8/threading.py", line 306, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
